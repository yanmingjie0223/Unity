
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;


namespace cfg
{
public sealed partial class Language : Luban.BeanBase
{
    public Language(ByteBuf _buf) 
    {
        Key = _buf.ReadString();
        Zh = _buf.ReadString();
        En = _buf.ReadString();
        Ja = _buf.ReadString();
        Ko = _buf.ReadString();
        Tc = _buf.ReadString();
        Es = _buf.ReadString();
        Fr = _buf.ReadString();
        De = _buf.ReadString();
        Ru = _buf.ReadString();
        Pt = _buf.ReadString();
        It = _buf.ReadString();
        Vn = _buf.ReadString();
    }

    public static Language DeserializeLanguage(ByteBuf _buf)
    {
        return new Language(_buf);
    }

    /// <summary>
    /// 唯一键
    /// </summary>
    public readonly string Key;
    /// <summary>
    /// 简体中文
    /// </summary>
    public readonly string Zh;
    /// <summary>
    /// 英文
    /// </summary>
    public readonly string En;
    /// <summary>
    /// 日语
    /// </summary>
    public readonly string Ja;
    /// <summary>
    /// 韩语
    /// </summary>
    public readonly string Ko;
    /// <summary>
    /// 繁体中文
    /// </summary>
    public readonly string Tc;
    /// <summary>
    /// 西班牙语
    /// </summary>
    public readonly string Es;
    /// <summary>
    /// 法语
    /// </summary>
    public readonly string Fr;
    /// <summary>
    /// 德语
    /// </summary>
    public readonly string De;
    /// <summary>
    /// 俄语
    /// </summary>
    public readonly string Ru;
    /// <summary>
    /// 葡萄牙语
    /// </summary>
    public readonly string Pt;
    /// <summary>
    /// 意大利语
    /// </summary>
    public readonly string It;
    /// <summary>
    /// 越南语
    /// </summary>
    public readonly string Vn;
   
    public const int __ID__ = -1548945544;
    public override int GetTypeId() => __ID__;

    public  void ResolveRef(Tables tables)
    {
        
        
        
        
        
        
        
        
        
        
        
        
        
    }

    public override string ToString()
    {
        return "{ "
        + "key:" + Key + ","
        + "zh:" + Zh + ","
        + "en:" + En + ","
        + "ja:" + Ja + ","
        + "ko:" + Ko + ","
        + "tc:" + Tc + ","
        + "es:" + Es + ","
        + "fr:" + Fr + ","
        + "de:" + De + ","
        + "ru:" + Ru + ","
        + "pt:" + Pt + ","
        + "it:" + It + ","
        + "vn:" + Vn + ","
        + "}";
    }
}

}
